{"ast":null,"code":"import axios from 'axios';\nexport default {\n  created() {\n    axios.get(\"https://rickandmortyapi.com/api/location\").then(res => {\n      this.places = res.data.results;\n      console.log(this.places);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  data() {\n    return {\n      places: []\n    };\n  }\n};","map":{"version":3,"names":["axios","created","get","then","res","places","data","results","console","log","catch","err"],"sources":["C:\\Users\\renat\\Desktop\\apirick\\src\\views\\PlacesView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"sm:h-24  h-48  bg-gray-800\">\r\n            <div class=\"flex justify-center sm:float-left \">\r\n                <img src=\"https://logosmarcas.net/wp-content/uploads/2022/01/Rick-And-Morty-Logo.png\" class=\"w-48 h-20 sm:ml-20 sm:float-left\">\r\n            </div>\r\n            <router-link :to=\"{name:'places'}\"><a><p class=\"sm:float-right   text-center text-white font-mono font-bold sm:mt-8 sm:mr-4 mt-2 text-base \">All Places</p></a></router-link>\r\n            <router-link :to=\"{name:'episodes'}\"><a><p class=\" sm:float-right text-center text-black font-mono font-bold sm:mt-8 sm:mr-3 mt-2 text-base bg-white  rounded-xl p-1 sm:p-2\">All Episodes</p></a></router-link>\r\n            <router-link :to=\"{name:'characters'}\"><a><p class=\" sm:float-right text-center text-white font-mono font-bold sm:mt-8 sm:mr-3 mt-2 text-base\">All Characters</p></a></router-link>\r\n        </div>\r\n        <div class=\"flex justify-center\">\r\n            <div class=\"sm:w-3/4 bg-gray-800 sm:rounded-md mt-10 \">\r\n            <p class=\"text-center text-white font-mono mt-2\">Places</p>\r\n                <div class=\"flex justify-center\">\r\n                    <table class=\"table-auto sm:w-5/6 w-2/3  bg-gray-800 rounded-md mt-2  mb-3\">\r\n                        <thead>\r\n                            <tr class=\"text-left bg-gray-700\">\r\n                                <th class=\"sm:py-2 sm:pl-2 pl-2 rounded-tl-md text-white \">Place</th>\r\n                                <th class=\"text-white\">Type</th>\r\n                                <th class=\"text-white\">Dimension</th>\r\n                                <th class=\"rounded-tr-md\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class=\"divide-y divide-gray-700\" >\r\n                            <tr class=\"\" v-for=\"place in places\" :key=\"place.id\">\r\n                                <td class=\"pr-3 p-2 text-white font-mono text-sm\">{{ place.name }}</td>\r\n                                <td class=\"text-white pr-3 p-2 font-mono text-sm\">{{ place.type }}</td>\r\n                                <td class=\"pr-3 p-2 text-white font-mono text-sm\">{{ place.dimension }}</td>\r\n                                <router-link :to=\"{name:'episode', params:{id:place.id}}\"><a><td class=\"pr-1 text-sm sm:text-base  text-white font-mono  \">+INFO</td></a></router-link>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    created(){\r\n        axios.get(\"https://rickandmortyapi.com/api/location\").then(res => {\r\n            this.places = res.data.results;\r\n            console.log(this.places);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    },\r\n    data(){\r\n        return{\r\n            places:[]\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAsCA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,OAAOA,CAAA,EAAE;IACLD,KAAK,CAACE,GAAG,CAAC,0CAA0C,CAAC,CAACC,IAAI,CAACC,GAAE,IAAK;MAC9D,IAAI,CAACC,MAAK,GAAID,GAAG,CAACE,IAAI,CAACC,OAAO;MAC9BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,MAAM,CAAC;IAC5B,CAAC,CAAC,CAACK,KAAK,CAACC,GAAE,IAAK;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IACpB,CAAC;EACL,CAAC;EACDL,IAAIA,CAAA,EAAE;IACF,OAAM;MACFD,MAAM,EAAC;IACX;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}